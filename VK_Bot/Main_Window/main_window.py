# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(812, 431)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Window = QtWidgets.QFrame(self.centralwidget)
        self.Window.setGeometry(QtCore.QRect(10, 10, 791, 411))
        self.Window.setStyleSheet("QFrame{\n"
"    border-radius: 7px;\n"
"    background-color: #1B1D23;\n"
"}\n"
"\n"
"QScrollBar:vertical{\n"
"    border: none;\n"
"    background: #595F76;\n"
"    width: 15px;\n"
"    margin: 15px 0 15px 0;\n"
"    border-radius: 0px;\n"
" }\n"
"\n"
"QScrollBar::handle:vertical{    \n"
"    background-color: #494E61;\n"
"    min-height: 30px;\n"
"}\n"
"QScrollBar::handle:vertical:hover{    \n"
"    background-color: #D5006A;\n"
"}\n"
"QScrollBar::handle:vertical:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical{\n"
"    border: none;\n"
"    background-color: #3A3F50;\n"
"    height: 15px;\n"
"    border-top-left-radius: 7px;\n"
"    border-top-right-radius: 7px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::sub-line:vertical:hover{    \n"
"    background-color: #D5006A;\n"
"}\n"
"QScrollBar::sub-line:vertical:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical{\n"
"    border: none;\n"
"    background-color: #3A3F50;\n"
"    height: 15px;\n"
"    border-bottom-left-radius: 7px;\n"
"    border-bottom-right-radius: 7px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::add-line:vertical:hover{    \n"
"    background-color: #D5006A;\n"
"}\n"
"QScrollBar::add-line:vertical:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical{\n"
"    background: none;\n"
"}\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical{\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar:horizontal{\n"
"    border: none;\n"
"    background: #595F76;\n"
"    height: 15px;\n"
"    margin: 0px 15 0px 15;\n"
"    border-radius: opx;\n"
" }\n"
"\n"
"QScrollBar::handle:horizontal{    \n"
"    background-color: #494E61;\n"
"    min-width: 30px;\n"
"}\n"
"QScrollBar::handle:horizontal:hover{    \n"
"    background-color: #D5006A;\n"
"}\n"
"QScrollBar::handle:horizontal:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal{\n"
"    border: none;\n"
"    background-color: #3A3F50;\n"
"    width: 15px;\n"
"    border-top-left-radius: 7px;\n"
"    border-bottom-left-radius: 7px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::sub-line:horizontal:hover{    \n"
"    background-color:#D5006A;\n"
"}\n"
"QScrollBar::sub-line:horizontal:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal{\n"
"    border: none;\n"
"    background-color: #3A3F50;\n"
"    width: 15px;\n"
"    border-top-right-radius: 7px;\n"
"    border-bottom-right-radius: 7px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::add-line:horizontal:hover{    \n"
"    background-color: #D5006A;\n"
"}\n"
"QScrollBar::add-line:horizontal:pressed{    \n"
"    background-color: #B9005C;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal{\n"
"    background: none;\n"
"}\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal{\n"
"    background: none;\n"
"}")
        self.Window.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Window.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Window.setObjectName("Window")
        self.WindowFrame = QtWidgets.QFrame(self.Window)
        self.WindowFrame.setGeometry(QtCore.QRect(0, 0, 791, 31))
        self.WindowFrame.setStyleSheet("QFrame{\n"
"    border-bottom-left-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"    background-color: #2C313C;\n"
"}")
        self.WindowFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.WindowFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.WindowFrame.setObjectName("WindowFrame")
        self.CloseWindowButton = QtWidgets.QPushButton(self.WindowFrame)
        self.CloseWindowButton.setGeometry(QtCore.QRect(750, 0, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.CloseWindowButton.setFont(font)
        self.CloseWindowButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CloseWindowButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border: none;\n"
"    border-top-right-radius: 7px;\n"
"    background-color: #2C313C;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #45494D;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    color: #EA2F4E;\n"
"}")
        self.CloseWindowButton.setObjectName("CloseWindowButton")
        self.MinimizeWindowButton = QtWidgets.QPushButton(self.WindowFrame)
        self.MinimizeWindowButton.setGeometry(QtCore.QRect(709, 0, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.MinimizeWindowButton.setFont(font)
        self.MinimizeWindowButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.MinimizeWindowButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border: none;\n"
"    border-top-right-radius: 7px;\n"
"    background-color: #2C313C;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #45494D;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    color: #EA2F4E;\n"
"}")
        self.MinimizeWindowButton.setDefault(False)
        self.MinimizeWindowButton.setObjectName("MinimizeWindowButton")
        self.OnOrOffBotButton = QtWidgets.QPushButton(self.Window)
        self.OnOrOffBotButton.setGeometry(QtCore.QRect(210, 350, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.OnOrOffBotButton.setFont(font)
        self.OnOrOffBotButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.OnOrOffBotButton.setStyleSheet("QPushButton{\n"
"    border-radius: 8px;\n"
"    background-color: #92E604;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #8BDC03;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #7DC802;\n"
"}")
        self.OnOrOffBotButton.setObjectName("OnOrOffBotButton")
        self.SettingsWindowButton = QtWidgets.QPushButton(self.Window)
        self.SettingsWindowButton.setGeometry(QtCore.QRect(20, 350, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.SettingsWindowButton.setFont(font)
        self.SettingsWindowButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsWindowButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.SettingsWindowButton.setObjectName("SettingsWindowButton")
        self.LogListWidget = QtWidgets.QListWidget(self.Window)
        self.LogListWidget.setGeometry(QtCore.QRect(20, 90, 371, 151))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.LogListWidget.setFont(font)
        self.LogListWidget.setTabletTracking(False)
        self.LogListWidget.setAutoFillBackground(False)
        self.LogListWidget.setStyleSheet("QListWidget{\n"
"    color: white;\n"
"    border-radius: 7px;\n"
"    background-color: #2C313C;\n"
"}\n"
"")
        self.LogListWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.LogListWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.LogListWidget.setLineWidth(1)
        self.LogListWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.LogListWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.LogListWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.LogListWidget.setAutoScroll(True)
        self.LogListWidget.setTabKeyNavigation(False)
        self.LogListWidget.setProperty("showDropIndicator", True)
        self.LogListWidget.setDragDropOverwriteMode(False)
        self.LogListWidget.setAlternatingRowColors(False)
        self.LogListWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.LogListWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.LogListWidget.setMovement(QtWidgets.QListView.Static)
        self.LogListWidget.setFlow(QtWidgets.QListView.TopToBottom)
        self.LogListWidget.setProperty("isWrapping", False)
        self.LogListWidget.setResizeMode(QtWidgets.QListView.Fixed)
        self.LogListWidget.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.LogListWidget.setViewMode(QtWidgets.QListView.ListMode)
        self.LogListWidget.setUniformItemSizes(False)
        self.LogListWidget.setWordWrap(False)
        self.LogListWidget.setSelectionRectVisible(False)
        self.LogListWidget.setObjectName("LogListWidget")
        self.SaveLogButton = QtWidgets.QPushButton(self.Window)
        self.SaveLogButton.setGeometry(QtCore.QRect(20, 250, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.SaveLogButton.setFont(font)
        self.SaveLogButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaveLogButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.SaveLogButton.setObjectName("SaveLogButton")
        self.ClearLogButton = QtWidgets.QPushButton(self.Window)
        self.ClearLogButton.setGeometry(QtCore.QRect(20, 300, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ClearLogButton.setFont(font)
        self.ClearLogButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ClearLogButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.ClearLogButton.setObjectName("ClearLogButton")
        self.UserCommandsListWidget = QtWidgets.QListWidget(self.Window)
        self.UserCommandsListWidget.setGeometry(QtCore.QRect(400, 90, 371, 151))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.UserCommandsListWidget.setFont(font)
        self.UserCommandsListWidget.setTabletTracking(False)
        self.UserCommandsListWidget.setAutoFillBackground(False)
        self.UserCommandsListWidget.setStyleSheet("color: white;\n"
"border-radius: 7px;\n"
"background-color: #2C313C;\n"
"")
        self.UserCommandsListWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.UserCommandsListWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.UserCommandsListWidget.setLineWidth(1)
        self.UserCommandsListWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.UserCommandsListWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.UserCommandsListWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.UserCommandsListWidget.setAutoScroll(True)
        self.UserCommandsListWidget.setTabKeyNavigation(False)
        self.UserCommandsListWidget.setProperty("showDropIndicator", True)
        self.UserCommandsListWidget.setDragDropOverwriteMode(False)
        self.UserCommandsListWidget.setAlternatingRowColors(False)
        self.UserCommandsListWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.UserCommandsListWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.UserCommandsListWidget.setMovement(QtWidgets.QListView.Static)
        self.UserCommandsListWidget.setFlow(QtWidgets.QListView.TopToBottom)
        self.UserCommandsListWidget.setProperty("isWrapping", False)
        self.UserCommandsListWidget.setResizeMode(QtWidgets.QListView.Fixed)
        self.UserCommandsListWidget.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.UserCommandsListWidget.setViewMode(QtWidgets.QListView.ListMode)
        self.UserCommandsListWidget.setUniformItemSizes(False)
        self.UserCommandsListWidget.setWordWrap(False)
        self.UserCommandsListWidget.setSelectionRectVisible(False)
        self.UserCommandsListWidget.setObjectName("UserCommandsListWidget")
        self.DeleteUserCommandButton = QtWidgets.QPushButton(self.Window)
        self.DeleteUserCommandButton.setGeometry(QtCore.QRect(400, 350, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.DeleteUserCommandButton.setFont(font)
        self.DeleteUserCommandButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.DeleteUserCommandButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.DeleteUserCommandButton.setObjectName("DeleteUserCommandButton")
        self.AddUserCommandButton = QtWidgets.QPushButton(self.Window)
        self.AddUserCommandButton.setGeometry(QtCore.QRect(400, 250, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.AddUserCommandButton.setFont(font)
        self.AddUserCommandButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddUserCommandButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.AddUserCommandButton.setObjectName("AddUserCommandButton")
        self.EditUserCommandButton = QtWidgets.QPushButton(self.Window)
        self.EditUserCommandButton.setGeometry(QtCore.QRect(400, 300, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.EditUserCommandButton.setFont(font)
        self.EditUserCommandButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.EditUserCommandButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    border-radius: 8px;\n"
"    background-color: #595F76;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: #50566E;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: #434965;\n"
"}")
        self.EditUserCommandButton.setObjectName("EditUserCommandButton")
        self.Label = QtWidgets.QLabel(self.Window)
        self.Label.setGeometry(QtCore.QRect(20, 30, 371, 61))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Label.sizePolicy().hasHeightForWidth())
        self.Label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.Label.setFont(font)
        self.Label.setStyleSheet("QLabel{\n"
"    color: white;\n"
"}")
        self.Label.setAlignment(QtCore.Qt.AlignCenter)
        self.Label.setObjectName("Label")
        self.Label_2 = QtWidgets.QLabel(self.Window)
        self.Label_2.setGeometry(QtCore.QRect(400, 30, 371, 61))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Label_2.sizePolicy().hasHeightForWidth())
        self.Label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.Label_2.setFont(font)
        self.Label_2.setStyleSheet("QLabel{\n"
"    color: white;\n"
"}")
        self.Label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_2.setObjectName("Label_2")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.CloseWindowButton.setText(_translate("MainWindow", "X"))
        self.MinimizeWindowButton.setText(_translate("MainWindow", "_"))
        self.OnOrOffBotButton.setText(_translate("MainWindow", "Запустить бота"))
        self.SettingsWindowButton.setText(_translate("MainWindow", "Настройки"))
        self.LogListWidget.setSortingEnabled(False)
        self.SaveLogButton.setText(_translate("MainWindow", "Сохранить логи"))
        self.ClearLogButton.setText(_translate("MainWindow", "Очистить логи"))
        self.UserCommandsListWidget.setSortingEnabled(False)
        self.DeleteUserCommandButton.setText(_translate("MainWindow", "Удалить команду"))
        self.AddUserCommandButton.setText(_translate("MainWindow", "Добавить команду"))
        self.EditUserCommandButton.setText(_translate("MainWindow", "Редактировать команду"))
        self.Label.setText(_translate("MainWindow", "Логи"))
        self.Label_2.setText(_translate("MainWindow", "Команды бота"))
